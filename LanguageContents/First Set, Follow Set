Non-Terminal Symbol		First Set 										Follow Set

ε				ε
RECORDS				RECORDS
COLON				COLON
ENDRECORDS			ENDRECORDS
REC				REC
ID				ID
ENDREC				ENDREC
SEMICOLON			SEMICOLON
STRING				STRING
MAT				MAT
LT				LT
GT				GT
LSQ				LSQ
RSQ				RSQ
INT				INT
REAL				REAL
BOOL				BOOL
CHAR				CHAR
COMMA				COMMA
INT_LIT				INT_LIT
PROCS				PROCS
ENDPROCS			ENDPROCS
PROC				PROC
LPAREN				LPAREN
RPAREN				RPAREN
ARROW				ARROW
ENDPROC				ENDPROC
EXECUTE				EXECUTE
END				END
IF				IF
ELIF				ELIF
ELSE				ELSE 											
ENDIF				ENDIF 											
GET				GET
PUT				PUT
ENDL				ENDL
TAB				TAB
DQUOTE				DQUOTE
STR_LIT				STR_LIT
DOT				DOT
CALL				CALL
LOOP				LOOP
ENDLOOP				ENDLOOP
BREAK				BREAK
CONTINUE			CONTINUE
NOT				NOT
BOOL_LIT			BOOL_LIT
AND				AND
OR				OR
LE				LE
GE				GE
EQ				EQ
NEQ				NEQ
REAL_LIT			REAL_LIT
SQUOTE				SQUOTE
CHAR_LIT			CHAR_LIT
ASSIGN				ASSIGN
ASSIGN_OP			ASSIGN_OP
BIT_NOT				BIT_NOT
MINUS				MINUS
BIT_OR				BIT_OR
BIT_XOR				BIT_XOR
BIT_AND				BIT_AND
PLUS				PLUS
MUL				MUL
DIV				DIV
MOD				MOD
POW				POW
MATASSIGN			MATASSIGN
LCURL				LCURL
RCURL				RCURL
MAT_ROWS			MAT_ROWS
MAT_COLS			MAT_COLS
STRASSIGN			STRASSIGN
STR_LENGTH			STR_LENGTH
<_records>			ε, RECORDS 												EXECUTE, PROCS
<_procedures>			ε, PROCS 												EXECUTE
<records>			RECORDS 												EXECUTE, PROCS
<_recs>				ε, REC 													ENDRECORDS
<rec>				REC 													REC, ENDRECORDS
<_decl_stmts>			ε, STRING, MAT, INT, REAL, BOOL, CHAR 									ENDREC
<decl_stmts>			STRING, MAT, INT, REAL, BOOL, CHAR 									ENDREC
<type>				STRING, MAT, INT, REAL, BOOL, CHAR 									ID
<basic_type>			INT, REAL, BOOL, CHAR 											ID, GT
<id_list>			ID 													SEMICOLON
<_id_list>			COMMA, ε 												SEMICOLON
<dims>				INT_LIT 												RSQ
<_int_lit>			INT_LIT, ε 												RSQ
<procedures>			PROCS 													EXECUTE
<_procs>			ε, PROC 												ENDPROCS
<procs>				PROC 													ENDPROCS
<proc>				PROC 													PROC, ENDPROCS
<_param_list>			COMMA, ε 												RPAREN
<execute>			EXECUTE 												$
<_stmts>			ε, STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, ASSIGN, MATASSIGN, IF, GET, PUT, CALL, STRASSIGN 		ENDIF, ELIF, LPAREN, NOT, BOOL_LIT, INT_LIT, REAL_LIT, SQUOTE, ID, END, ENDPROC, ELSE
<stmts>				STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, ASSIGN, MATASSIGN, IF, GET, PUT, CALL, STRASSIGN 		ENDIF, ELIF, LPAREN, NOT, BOOL_LIT, INT_LIT, REAL_LIT, SQUOTE, ID, END, ENDPROC, ELSE
<cond_stmt>			IF 													STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, ASSIGN, MATASSIGN, IF, GET, PUT, CALL, STRASSIGN, BREAK, CONTINUE, ENDIF, ELIF, LPAREN, NOT, BOOL_LIT, INT_LIT, REAL_LIT, SQUOTE, ID, END, ENDPROC, ELSE, ENDLOOP
<else_if>			ELIF, ε 												ELSE, ENDIF
<_cond_stmt>			ELSE, ENDIF 												STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, ASSIGN, MATASSIGN, IF, GET, PUT, CALL, STRASSIGN, BREAK, CONTINUE, ENDIF, ELIF, LPAREN, NOT, BOOL_LIT, INT_LIT, REAL_LIT, SQUOTE, ID, END, ENDPROC, ELSE, ENDLOOP
<io_stmt>			GET, PUT 												STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, ASSIGN, MATASSIGN, IF, GET, PUT, CALL, STRASSIGN, BREAK, CONTINUE, ENDIF, ELIF, LPAREN, NOT, BOOL_LIT, INT_LIT, REAL_LIT, SQUOTE, ID, END, ENDPROC, ELSE, ENDLOOP
<put_param>			ENDL, TAB, DQUOTE, ID 											RPAREN
<var>				ID 													ASSIGN_OP, RPAREN, POW, LT, GT, LE, GE, EQ, NEQ, MUL, DIV, MOD, PLUS, MINUS, BIT_AND, BIT_XOR, BIT_OR, SEMICOLON
<_var>				LSQ, DOT, ε 												ASSIGN_OP, RPAREN, POW, LT, GT, LE, GE, EQ, NEQ, MUL, DIV, MOD, PLUS, MINUS, BIT_AND, BIT_XOR, BIT_OR, SEMICOLON
<proc_call_stmt>		CALL 													STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, ASSIGN, MATASSIGN, IF, GET, PUT, CALL, STRASSIGN, BREAK, CONTINUE, ENDIF, ELIF, LPAREN, NOT, BOOL_LIT, INT_LIT, REAL_LIT, SQUOTE, ID, END, ENDPROC, ELSE, ENDLOOP
<proc_arg_list>			ε, ID 													RPAREN
<arg_list>			ID 													RPAREN
<arg_list1>			COMMA, LSQ, DOT, ε 											RPAREN
<arg_list2>			COMMA, ε 												RPAREN
<loop_stmt>			LOOP 													STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, ASSIGN, MATASSIGN, IF, GET, PUT, CALL, STRASSIGN, BREAK, CONTINUE, ENDIF, ELIF, LPAREN, NOT, BOOL_LIT, INT_LIT, REAL_LIT, SQUOTE, ID, END, ENDPROC, ELSE, ENDLOOP
<iloop_stmts>			ε, BREAK, CONTINUE, STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, ID, IF, GET, PUT 				ENDLOOP
<iloop_stmt>			BREAK, CONTINUE, STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, ID, IF, GET, PUT 				BREAK, CONTINUE, STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, ASSIGN, MATASSIGN, IF, GET, PUT, CALL, STRASSIGN, ENDLOOP
<assign_list>			ε, ASSIGN 												RPAREN
<assign_stmt>			ASSIGN 													ASSIGN, RPAREN, STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, MATASSIGN, IF, GET, PUT, CALL, STRASSIGN, BREAK, CONTINUE, ENDIF, ELIF, LPAREN, NOT, BOOL_LIT, INT_LIT, REAL_LIT, SQUOTE, ID, END, ENDPROC, ELSE, ENDLOOP
<conds>				LPAREN, NOT, BOOL_LIT, INT_LIT, REAL_LIT, SQUOTE, ID 							RPAREN
<logical_op>			AND, OR 												LPAREN
<rel_op>			LT, GT, LE, GE, EQ, NEQ 										INT_LIT, REAL_LIT, SQUOTE, ID
<elem>				INT_LIT, REAL_LIT, SQUOTE, ID 										LT, GT, LE, GE, EQ, NEQ, RPAREN
<expr>				SQUOTE, LPAREN, BIT_NOT, MINUS, ID, INT_LIT, REAL_LIT, BOOL_LIT 					RPAREN, SEMICOLON
<expr_00>			ε, BIT_OR 												RPAREN, SEMICOLON
<expr_01>			ε, BIT_XOR 												BIT_OR, RPAREN, SEMICOLON
<expr_02>			ε, BIT_AND 												BIT_XOR, BIT_OR, RPAREN, SEMICOLON
<expr_03>			ε, PLUS, MINUS 												BIT_AND, BIT_XOR, BIT_OR, RPAREN, SEMICOLON
<expr_04>			ε, MUL, DIV, MOD 											PLUS, MINUS, BIT_AND, BIT_XOR, BIT_OR, RPAREN, SEMICOLON
<expr_05>			ε, POW 													MUL, DIV, MOD, PLUS, MINUS, BIT_AND, BIT_XOR, BIT_OR, RPAREN, SEMICOLON
<factor>			LPAREN, BIT_NOT, MINUS, ID, INT_LIT, REAL_LIT, BOOL_LIT, SQUOTE 					POW, MUL, DIV, MOD, PLUS, MINUS, BIT_AND, BIT_XOR, BIT_OR, RPAREN, SEMICOLON
<op_pred_00>			BIT_OR 													SQUOTE, LPAREN, BIT_NOT, MINUS, ID, INT_LIT, REAL_LIT, BOOL_LIT
<op_pred_01>			BIT_XOR 												LPAREN, BIT_NOT, MINUS, ID, INT_LIT, REAL_LIT, BOOL_LIT, SQUOTE
<op_pred_02>			BIT_AND 												LPAREN, BIT_NOT, MINUS, ID, INT_LIT, REAL_LIT, BOOL_LIT, SQUOTE
<op_pred_03>			PLUS, MINUS 												LPAREN, BIT_NOT, MINUS, ID, INT_LIT, REAL_LIT, BOOL_LIT, SQUOTE
<op_pred_04>			MUL, DIV, MOD 												LPAREN, BIT_NOT, MINUS, ID, INT_LIT, REAL_LIT, BOOL_LIT, SQUOTE
<op_pred_05>			POW 													LPAREN, BIT_NOT, MINUS, ID, INT_LIT, REAL_LIT, BOOL_LIT, SQUOTE
<mat_assign_stmt>		MATASSIGN 												STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, ASSIGN, MATASSIGN, IF, GET, PUT, CALL, STRASSIGN, BREAK, CONTINUE, ENDIF, ELIF, LPAREN, NOT, BOOL_LIT, INT_LIT, REAL_LIT, SQUOTE, ID, END, ENDPROC, ELSE, ENDLOOP
<mat_stmt>			LCURL, ID 												STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, ASSIGN, MATASSIGN, IF, GET, PUT, CALL, STRASSIGN, BREAK, CONTINUE, ENDIF, ELIF, LPAREN, NOT, BOOL_LIT, INT_LIT, REAL_LIT, SQUOTE, ID, END, ENDPROC, ELSE, ENDLOOP
<_mat_stmt>			PLUS, MAT_ROWS, MAT_COLS 										STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, ASSIGN, MATASSIGN, IF, GET, PUT, CALL, STRASSIGN, BREAK, CONTINUE, ENDIF, ELIF, LPAREN, NOT, BOOL_LIT, INT_LIT, REAL_LIT, SQUOTE, ID, END, ENDPROC, ELSE, ENDLOOP
<_row_list>			SEMICOLON, ε 												RCURL
<_row>				COMMA, ε 												INT_LIT, REAL_LIT, BOOL_LIT, SQUOTE, SEMICOLON, RCURL
<const>				INT_LIT, REAL_LIT, BOOL_LIT, SQUOTE 									INT_LIT, REAL_LIT, BOOL_LIT, SQUOTE, COMMA, SEMICOLON, RCURL, POW, MUL, DIV, MOD, PLUS, MINUS, BIT_AND, BIT_XOR, BIT_OR, RPAREN
<str_assign_stmt>		STRASSIGN												STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, ASSIGN, MATASSIGN, IF, GET, PUT, CALL, STRASSIGN, BREAK, CONTINUE, ENDIF, ELIF, LPAREN, NOT, BOOL_LIT, INT_LIT, REAL_LIT, SQUOTE, ID, END, ENDPROC, ELSE, ENDLOOP
<str_stmt>			DQUOTE, ID 												STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, ASSIGN, MATASSIGN, IF, GET, PUT, CALL, STRASSIGN, BREAK, CONTINUE, ENDIF, ELIF, LPAREN, NOT, BOOL_LIT, INT_LIT, REAL_LIT, SQUOTE, ID, END, ENDPROC, ELSE, ENDLOOP
<_str_stmt>			SEMICOLON, PLUS, LSQ, STR_LENGTH 									STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, ASSIGN, MATASSIGN, IF, GET, PUT, CALL, STRASSIGN, BREAK, CONTINUE, ENDIF, ELIF, LPAREN, NOT, BOOL_LIT, INT_LIT, REAL_LIT, SQUOTE, ID, END, ENDPROC, ELSE, ENDLOOP
<ind>				ID, INT_LIT 												RSQ
<recs>				REC 													ENDRECORDS
<param_list>			INT, REAL, BOOL, CHAR, COMMA, ε 									RPAREN
<row>				INT_LIT, REAL_LIT, BOOL_LIT, SQUOTE 									INT_LIT, REAL_LIT, BOOL_LIT, SQUOTE, SEMICOLON, RCURL
<program>			ε, RECORDS, EXECUTE, PROCS 										$
<decl_stmt>			STRING, MAT, INT, REAL, BOOL, CHAR 									STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, ASSIGN, MATASSIGN, IF, GET, PUT, CALL, STRASSIGN, ENDREC, BREAK, CONTINUE, ENDIF, ELIF, LPAREN, NOT, BOOL_LIT, INT_LIT, REAL_LIT, SQUOTE, ID, END, ENDPROC, ELSE, ENDLOOP
<row_list>			INT_LIT, REAL_LIT, BOOL_LIT, SQUOTE 									RCURL
<stmt>				STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, ASSIGN, MATASSIGN, IF, GET, PUT, CALL, STRASSIGN 		STRING, MAT, INT, REAL, BOOL, CHAR, LOOP, ASSIGN, MATASSIGN, IF, GET, PUT, CALL, STRASSIGN, BREAK, CONTINUE, ENDIF, ELIF, LPAREN, NOT, BOOL_LIT, INT_LIT, REAL_LIT, SQUOTE, ID, END, ENDPROC, ELSE, ENDLOOP
<term_04>			LPAREN, BIT_NOT, MINUS, ID, INT_LIT, REAL_LIT, BOOL_LIT, SQUOTE 					MUL, DIV, MOD, PLUS, MINUS, BIT_AND, BIT_XOR, BIT_OR, RPAREN, SEMICOLON
<term_03>			LPAREN, BIT_NOT, MINUS, ID, INT_LIT, REAL_LIT, BOOL_LIT, SQUOTE 					PLUS, MINUS, BIT_AND, BIT_XOR, BIT_OR, RPAREN, SEMICOLON
<term_02>			LPAREN, BIT_NOT, MINUS, ID, INT_LIT, REAL_LIT, BOOL_LIT, SQUOTE 					BIT_AND, BIT_XOR, BIT_OR, RPAREN, SEMICOLON
<term_01>			LPAREN, BIT_NOT, MINUS, ID, INT_LIT, REAL_LIT, BOOL_LIT, SQUOTE 					BIT_XOR, BIT_OR, RPAREN, SEMICOLON
<term_00>			LPAREN, BIT_NOT, MINUS, ID, INT_LIT, REAL_LIT, BOOL_LIT, SQUOTE 					BIT_OR, RPAREN, SEMICOLON